# Generated by Django 3.0.5 on 2022-08-18 08:55

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Award',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512)),
            ],
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='branch')),
            ],
        ),
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512)),
                ('address', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='city')),
            ],
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='colorNames')),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='country')),
            ],
        ),
        migrations.CreateModel(
            name='GadgetType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dress', models.TextField()),
                ('shoes', models.TextField()),
                ('collet', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Illness',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512)),
                ('is_medicine', models.BooleanField(verbose_name='isMedicine')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kopek2.Branch', verbose_name='branch')),
            ],
        ),
        migrations.CreateModel(
            name='IllnessType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512)),
            ],
        ),
        migrations.CreateModel(
            name='Judge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=128, verbose_name='firstName')),
                ('last_name', models.CharField(max_length=128, verbose_name='lastName')),
                ('birth_date', models.DateField()),
                ('phone', models.CharField(blank=True, max_length=11, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=128, verbose_name='firstName')),
                ('last_name', models.CharField(max_length=128, verbose_name='lastName')),
                ('phone', models.CharField(blank=True, max_length=11, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('tc', models.CharField(max_length=11, unique=True)),
                ('address', models.TextField()),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='kopek2.City', verbose_name='City')),
            ],
        ),
        migrations.CreateModel(
            name='Pet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Name')),
                ('birth_date', models.DateField()),
                ('color', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='kopek2.Color', verbose_name='Color')),
                ('gadget', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='kopek2.GadgetType', verbose_name='Gadget')),
                ('illness', models.ManyToManyField(to='kopek2.Illness', verbose_name='Illness')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pets', to='kopek2.Owner')),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pets', to='kopek2.Pet', verbose_name='Parent')),
            ],
        ),
        migrations.CreateModel(
            name='Race',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='size')),
            ],
        ),
        migrations.CreateModel(
            name='PetIllness',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.IntegerField(choices=[('Stomach', 'Stomach'), ('Heart', 'Heart'), ('Bowel', 'Bowel'), ('Brain', 'Brain'), ('Bone', 'Bone'), ('Muscle', 'Muscle')])),
                ('pet', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='kopek2.Pet', verbose_name='pet')),
                ('type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='kopek2.IllnessType', verbose_name='IllnessType')),
            ],
        ),
        migrations.CreateModel(
            name='PetChallenge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('award', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='kopek2.Award', verbose_name='award')),
                ('challenge', models.ManyToManyField(to='kopek2.Challenge', verbose_name='challenge')),
                ('pet', models.ManyToManyField(to='kopek2.Pet', verbose_name='pet')),
                ('race', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='races', to='kopek2.Race', verbose_name='race')),
            ],
        ),
        migrations.AddField(
            model_name='pet',
            name='race',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='kopek2.Race', verbose_name='Race'),
        ),
        migrations.AddField(
            model_name='pet',
            name='size',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='kopek2.Size', verbose_name='Size'),
        ),
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512, verbose_name='hospital')),
                ('address', models.TextField(verbose_name='address')),
                ('phone', models.CharField(blank=True, max_length=11, null=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kopek2.City', verbose_name='City')),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=128, verbose_name='firstName')),
                ('last_name', models.CharField(max_length=128, verbose_name='lastName')),
                ('phone', models.CharField(blank=True, max_length=11, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('branch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='kopek2.Branch', verbose_name='branch')),
                ('hospital', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='kopek2.Hospital', verbose_name='Hospital')),
            ],
        ),
        migrations.AddField(
            model_name='city',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='countries', to='kopek2.Country', verbose_name='country'),
        ),
        migrations.AddField(
            model_name='challenge',
            name='city',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='kopek2.City', verbose_name='City'),
        ),
        migrations.AddField(
            model_name='challenge',
            name='country',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='kopek2.Country', verbose_name='Country'),
        ),
        migrations.AddField(
            model_name='challenge',
            name='judge',
            field=models.ManyToManyField(related_name='judges', to='kopek2.Judge', verbose_name='judge'),
        ),
        migrations.AddField(
            model_name='challenge',
            name='pet',
            field=models.ManyToManyField(related_name='pet', to='kopek2.Pet', verbose_name='pet'),
        ),
    ]
